var express = require('express'),
    app = express(),
    http = require('http'),
    path = require('path'),
    server = require('http').Server(app),
    stdio = require('stdio'),
    asyncd = require('async'),
	mongo = require('mongodb'),
	mongojs = require('mongojs');

var mongoUri = 'mongodb://admin:admin@ds035674.mongolab.com:35674/byte-buccaneers'
var db = mongojs(mongoUri,['users','groups']);



//App Configuration
app.set('port', (process.env.PORT || 5000));
app.use(express.static(__dirname + '/public'));

app.get('/', function(request, response) {
  response.render('index.html');
});


app.get('/create', function(request, response){
  q = request.query;
  db.users.findAndModify({
    query:{userID: q.userID,
           website: q.website},
    update:{
    $setOnInsert: {user: q.user,
                   password: q.password,
                   website: q.website,
                   userID: q.userID}
    },
    new: true,
    upsert: true // insert the document if it does not exist
  },function (err, doc, lastErrorObject) {
    // doc.tag === 'maintainer'
  })

  response.json(request.query);
})

app.get('/read/:number/:name/', function(request, response){
	//request.params.name/number/whatever
	var usernumber = request.params.number;
	db.users.find({},function(err, docs) {
		console.log(err);
	});
	/*
	var labs_res =
	db.users.find(
		{"number":usernumber},
		function(err,docs){
			console.log(docs);
			response.send(docs);
		}
	);
	*/
	/*
	db.users.find({phonenumber: usernumber},function(err, docs){
     console.log(docs);
     response.json(docs);
    })*/
	response.send("shutup \n")
})

app.get('/update', function(request,response){
  q = request.query;
  db.users.update({userID : q.userID, website: q.website},
                  {$set: {password: q.password}},
                  function(err, docs){
    response.json(docs);
  })
})


app.get('/api/test', function(request, response){
    var q = request.query;
    console.log(q);
});


server.listen(app.get('port'), function() {
  console.log('Node app is running on port', app.get('port'));
});
